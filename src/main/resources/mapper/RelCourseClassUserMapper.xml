<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.educational.dao.RelCourseClassUserMapper" >
  <resultMap id="BaseResultMap" type="com.educational.entity.RelCourseClassUser" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="VARCHAR" />
    <result column="class_id" property="classId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, course_id, class_id, user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.educational.entity.RelCourseClassUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rel_course_class_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from rel_course_class_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from rel_course_class_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.educational.entity.RelCourseClassUserExample" >
    delete from rel_course_class_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.educational.entity.RelCourseClassUser" >
    insert into rel_course_class_user (id, course_id, class_id, 
      user_id)
    values (#{id,jdbcType=VARCHAR}, #{courseId,jdbcType=VARCHAR}, #{classId,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.educational.entity.RelCourseClassUser" >
    insert into rel_course_class_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.educational.entity.RelCourseClassUserExample" resultType="java.lang.Integer" >
    select count(*) from rel_course_class_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update rel_course_class_user
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update rel_course_class_user
    set id = #{record.id,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.educational.entity.RelCourseClassUser" >
    update rel_course_class_user
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.educational.entity.RelCourseClassUser" >
    update rel_course_class_user
    set course_id = #{courseId,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--获取用户id和班级id-->
  <select id="getClassIdAndUserIdByCourseId" resultMap="BaseResultMap" parameterType="com.educational.entity.RelCourseClassUserExample" >
    select
    class_id, user_id
    from rel_course_class_user
    where course_id = #{courseId,jdbcType=VARCHAR}
  </select>

  <!--getObjByCourseIdAndClassId-->
  <select id="getObjByCourseIdAndClassId" resultMap="BaseResultMap" parameterType="com.educational.entity.RelCourseClassUserExample" >
    select
    <include refid="Base_Column_List" />
    from rel_course_class_user
    where course_id = #{cid,jdbcType=VARCHAR} and class_id = #{classId}
  </select>

  <!--updateUserId-->
  <update id="updateUserId">
    update rel_course_class_user
     set user_id = #{uid}
    where id = #{id}
  </update>

  <!--delCourseById-->
  <delete id="delCourseById" parameterType="java.lang.String" >
    delete from rel_course_class_user
    where course_id = #{id,jdbcType=VARCHAR}
  </delete>

  <!--delDataByClassId-->
  <delete id="delDataByClassId" parameterType="java.lang.String" >
    delete from rel_course_class_user
    where class_id = #{id,jdbcType=VARCHAR}
  </delete>

  <!--getUserIdsByCourseId-->
  <select id="getUserIdsByCourseId" resultType="java.lang.String" >
    select
    user_id
    from rel_course_class_user
    where course_id = #{courseId,jdbcType=VARCHAR} and user_id != ""
  </select>

  <!--getClassIdByCourseId-->
  <select id="getClassIdByCourseId" resultMap="BaseResultMap" parameterType="com.educational.entity.RelCourseClassUserExample" >
    select
    class_id
    from rel_course_class_user
    where course_id = #{id,jdbcType=VARCHAR}
  </select>

</mapper>